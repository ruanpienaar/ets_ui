---

☐ Add ets select query functionality



☐ store viewSystemTables in LocalStorage
☐ update front-end to auto use LocalStorage for showing system tables

☐ create query open/close ( toggle ) to save ui space
☐ store query portion opened/not-opened in LocalStorage.

☐ create API for checking match/match-object/select MatchSpec/MatchTuple.
☐ lookup, with many results per key ( tbl4, key: 935 ) creates 8 entries, but pagesize of 5, shows 'from-beginning-button'. likely as continuation is set to 'undefined'
☐ change table fetch to be done in EtsUiApp constructor instead of re-render after state change / ☐ find a nicer way of looking up tables as app/web starts.
☐ create front-end for altering entry? pencil/trash-can next to entry?
☐ create alter query part on FE ( edit/delete entries )
☐ create tuple match builder, { x, '_' } etc
☐ allow for multiple selected tables to run multiple queries ( how are we going to show that ? results per table maybe ? )
☐ use axios instead of jQuery for HTTP calls ( https://malcoded.com/posts/react-http-requests-axios/ )
☐ pagination broken with bag/duplicate bag tables, as first/next returns a list of entries for each key. could argue, that can be left as is, investigate.

☐ components/JS are not running in strict mode ( https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Strict_mode )

☐ store results per page in local storage
☐ create heading sort function on tables page, so you can sort on cols
☐ sort table on name by default, and allow sorting to be stored in LocalStorage
☐ create process info lookup from PID, <0.280.0>
☐ create links to erlang documentation from ets table options



☐ pretty print erlang datastructures on entry view ( simmilar to what the shell does )
☐ create edit feature for entry
☐ create delete feature for entry
☐ create match_delete feature for entry
☐ add other ets table entry functions from erlang docs onto page ( check what ets:* functions there are for data entries)
☐ create table checker on table value on query mod
☐ use rest on cowboy_handler modules
☐ Add some system related items to the dashboard too
    16> erlang:system_info(ets_count).
    38
    17> erlang:system_info(ets_limit).
    8192
☐ make a "use this key" button under each row, to fill in the key in the search textbox
☐ create functionality for going back on pages
☐ don't have to reverse results, reads a bit weird on page
☐ each field needs a data type, so that people can see whether a field was a string or atom since the match_object will need a data type...
☐ create item on query page, where you can generate the weird
   ets query match specs 3 x '_' = {'_', '_', '_'} OR
   Key = 'abc' + ( 3 x '_' ) = {'abc', '_', '_', '_'}
☐ build a syntax checker for the inputs...
☐ Create joining functionality on page. join.html with join backend
☐ use erlang records as entries with keypos == 2, and add version numbers to records
☐ lookup with bad syntax causes a http 400 reseponse, but nothing shows up on the page
☐ create REGEX for certain tables to be display on landing page, instead of all. & create page filter/search textbox
☐ re-write app as elixir app.
 ☐ investigate elixir web-apps
 ☐ get circle-ci CI job running on multiple erlang versions
 ☐ deprecate travis ci stuff
 ☐ update HELP endpoint

#☐ create entries pagination ( next only - feature parity ) keeping the app simple, and the table continuation simple too.
#☐ results per page select drop-down working, fetch more/less when changed
#☐ HANDLE bag/duplicate bag table entries - whatsup with bag/duplicate bag? Why is that not a valid table for ets_ui ?
#☐ create simple list-all-tables API lookup for query-portion
#☐ create FE query portion that stays on table-view/entries-view
# ☐ increase font size on query part